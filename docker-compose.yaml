services:
  diffusion-model-tutorial-base:
    image: diffusion-model-tutorial-base:1.0.0
    build:
      context: .
      dockerfile: dockerfile_base
      
  diffusion-model-tutorial-research:
    hostname: diffusion-model-tutorial-research
    image: diffusion-model-tutorial-research-chpark:1.0.0
    container_name: diffusion-model-tutorial-research-chpark
    ipc: host 
    tty: true
    stdin_open: true
    volumes:
      - /home/chpark/projects/diffusion-model-tutorial:/opt/diffusion-model-tutorial
      - /home/chpark/.vscode-server:/home/chpark/.vscode-server  # VSCode 설치 유지 가능하도록 함.
    working_dir: /opt/diffusion-model-tutorial
    build:
      context: .
      dockerfile: dockerfile_research
      target: ${TARGET_STAGE:-train}
      args: 
        BASE_IMAGE: diffusion-model-tutorial-base:1.0.0
        WORKDIR_PATH: ${WORKDIR_PATH:-/opt/ml}
        GRP: ${GRP:-noname}
        USR: ${USR:-noname}
        GID: ${GID:-noname}
        UID: ${UID:-noname}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]

  diffusion-model-tutorial-deploy:
    hostname: diffusion-model-tutorial-deploy
    image: diffusion-model-tutorial-deploy:1.0.0
    container_name: diffusion-model-tutorial-deploy
    ipc: host 
    tty: true
    stdin_open: true
    working_dir: /opt/diffusion-model-tutorial
    build:
      context: .
      dockerfile: dockerfile_deploy
      target: ${TARGET_STAGE:-deploy}
      args: 
        BASE_IMAGE: diffusion-model-tutorial-base:1.0.0
        WORKDIR_PATH: ${WORKDIR_PATH:-/opt/ml}
        GRP: ${GRP:-noname}
        USR: ${USR:-noname}
        GID: ${GID:-noname}
        UID: ${UID:-noname}
    ports:
      - "80:80"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
